@import "functions";
@import "variables";

$code-color: $gray-900;
$font-size-base: 1rem;
$line-height-base: 1.7;
$h1-font-size: $font-size-base * 1.9 !default;
$h2-font-size: $font-size-base * 1.7 !default;
$h3-font-size: $font-size-base * 1.5 !default;
$h4-font-size: $font-size-base * 1.3 !default;
$h5-font-size: $font-size-base * 1.1 !default;
$enable-rounded: false;
$nav-link-padding-y: .25rem;

h1 {
  font-weight: 300;
}


@import "mixins";
@import "root";
@import "reboot";
@import "type";
@import "images";
@import "code";
@import "grid";
@import "tables";
@import "forms";
@import "buttons";
@import "transitions";
@import "dropdown";
@import "button-group";
@import "input-group";
@import "custom-forms";
@import "nav";
@import "navbar";
@import "card";
@import "breadcrumb";
@import "pagination";
@import "badge";
@import "jumbotron";
@import "alert";
@import "progress";
@import "media";
@import "list-group";
@import "close";
@import "modal";
@import "tooltip";
@import "popover";
@import "carousel";
@import "utilities";
@import "print";

body {
  max-width: 1600px;
}

code {
  background: rgba(0, 0, 0, .05);
  padding: 0.1em 0.2em;
}

pre {
  margin-bottom: 0;
}

pre > code {
  background: transparent;
  padding: 0;
}

.main {
  padding-top: 2rem;
}

.article {
  & > p, & > h1, & > h2, & > ul {
    position: relative;

    &:hover > .anchor {
      display: block;
    }

    @include media-breakpoint-up(md) {
      margin-right: 20%;
    }

    padding-left: map-get($spacers, 4);
  }

  & > .highlight {
    &:hover >.anchor {
      display: block;
    }
  }

  & > .docstring {
    margin-top: $spacer;
    margin-bottom: $spacer;
  }
}

.highlight {
  padding: map-get($spacers, 4);
  background: rgba(0, 0, 0, .05);
  margin-top: $spacer;
  margin-bottom: $spacer;
}

.sidebar {
  display: none;

  nav {
    overflow-y: auto;
  }

  @include media-breakpoint-up(md) {
    display: block;
    
    @supports (position: sticky) {
      position: sticky;
      top: 0;
      height: 100vh;
    }
  }
}

.sidebar-header {
  text-align: center;
}

.anchor {
  color: $gray-400;
  display: none;

  &:hover {
    text-decoration: none;
  }

  &::before {
    content: '§';
  }

  &.anchor-l {
    position: absolute;
    left: 0;
  }

  &.anchor-r {
    float: right;
  }
}

.path {
  @include list-unstyled;
  font-size: $small-font-size;
  margin: 0;

  li {
      display: inline;
  }
}

.docstring-category {
  &:before {
    content: '— '
  }
}

.alert {
  code, .highlight {
    background-color: rgba(255, 255, 255, 0.5);
  }

  pre > code {
    background-color: transparent;
  }
}

@each $color, $value in $theme-colors {
  .julia-alert-#{$color} {
    @include alert-variant(theme-color-level($color, -10), theme-color-level($color, -4), theme-color-level($color, 6));
    border-width: 1px 1px 1px 4px;
  }
}

.page-toc {
  margin-top: map-get($spacers, 5);
  border-left: $border-width solid $border-color;
}

p, h1, h2 {
  &:target {
    animation-name: example;
    animation-duration: 1000ms;
  }
}

@keyframes example {
    from {background-color: theme-color-level("warning", -10);}
    to {background-color: transparent;}
}

.julia-nav {
  font-size: $font-size-sm;

  .nav-link {
    color: $body-color;
  }
}